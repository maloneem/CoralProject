---
title: "Coral Analysis Notes"
author: "Jason Chari and Elizabeth Maloney"
date: "June 9, 2016"
output: pdf_document
sansfont: Garamond
---


**1. Read in Data**

<<<<<<< HEAD
```{r, tidy=TRUE, tidy.opts=list(width.cutoff=60)}
setwd("~/Desktop/Coral Project Data/ALL DCM")
=======
```{r}
#setwd("~/CoralProject")
#setwd("C:/Users/maloneem/Documents/CoralProject")

>>>>>>> 4b7611986e070f2cd3f168d2b830438157c3aa8e
#Read in Data
filenamesDCM = c("PAL003DCM1.csv","PAL006DCM1.csv","PAL007DCM1.csv","PAL014DCM1.csv","PAL015DCM1.csv",
              "PAL017DCM1.csv","PAL018DCM1.csv","PAL019D3.csv","PAL029DCM1.csv","PAL042D2.csv","PAL043DCM1.csv",
              "PAL044DCM1.csv","PAL045DCM1.csv","PAL048DCM1.csv","PAL050D1.csv","PAL052D1.csv",
              "PAL052D2.csv","PAL130D1.csv","PAL131D1.csv","PAL133D1.csv","PAL134D1.csv","PAL137DCM1.csv",
              "PAL227D1.csv","PAL247DCM1.csv","PAL248D1.csv","PAL250D1.csv","PAL250D2.csv","PAL252DCM1.csv",
              "PAL270D1.csv","PAL299DCM1.csv","PAL300D1.csv","PAL301D1.csv","PAL302D1.csv","PAL306D1.csv","PAL307DCM1.csv",
              "PAL332D1.csv","PAL333D1.csv","PAL334D1.csv","PAL340D1.csv","PAL355D1.csv","PAL356D1.csv","PAL359D1.csv",
              "PAL362D1.csv","PAL374DCM1.csv","PAL375D1.csv","PAL378DCM1.csv","PAL379DCM1.csv","PAL382DCM1.csv")

filenamesHEX = c( "PAL001HEX1.CSV", "PAL003HEX1.CSV", "PAL007HEX1.CSV", "PAL014HEX1.CSV", "PAL015HEX1.CSV",
                  "PAL017HEX1.CSV", "PAL018HEX1.CSV", "PAL019H5.CSV",   "PAL029HEX1.CSV", "PAL042H2.CSV",
                  "PAL043HEX1.CSV", "PAL044HEX1.CSV", "PAL046HEX1.CSV", "PAL048HEX1.CSV", "PAL050H1.CSV",
                  "PAL052H1.CSV",   "PAL052H2.CSV",   "PAL130H1.CSV", "PAL131H1.CSV",   "PAL133H1.CSV",
                  "PAL134H1.CSV",   "PAL137HEX1.CSV", "PAL227H1.CSV",   "PAL247HEX1.CSV","PAL248H1.CSV",
                  "PAL250H1.CSV", "PAL250H2.CSV",  "PAL252HEX1.CSV", "PAL270H1.CSV",   "PAL299HEX1.CSV",
                  "PAL300H1.CSV",   "PAL301H1.CSV", "PAL302H1.CSV",   "PAL306H1.CSV",   "PAL307HEX1.CSV",
                  "PAL332H1.CSV", "PAL333H1.CSV","PAL334H1.CSV",   "PAL340H1.CSV",   "PAL355H1.CSV",
                  "PAL356H1.CSV",   "PAL359H1.CSV",  "PAL362H1.CSV",   "PAL374HEX1.CSV", "PAL375H1.CSV",
                  "PAL378HEX1.CSV", "PAL379HEX1.CSV", "PAL382HEX1.CSV")

setwd("2016 Raw Data/All DCM")
PAL003DCM1 = read.csv(filenamesDCM[1],header=FALSE)
PAL006DCM1 = read.csv(filenamesDCM[2],header=FALSE)
PAL007DCM1 = read.csv(filenamesDCM[3],header=FALSE)
PAL014DCM1 = read.csv(filenamesDCM[4],header=FALSE)
PAL015DCM1 = read.csv(filenamesDCM[5],header=FALSE)
PAL017DCM1 = read.csv(filenamesDCM[6],header=FALSE)
PAL018DCM1 = read.csv(filenamesDCM[7],header=FALSE)
PAL019DCM1 = read.csv(filenamesDCM[8],header=FALSE)
PAL029DCM1 = read.csv(filenamesDCM[9],header=FALSE)
PAL042DCM1 = read.csv(filenamesDCM[10],header=FALSE)
PAL043DCM1 = read.csv(filenamesDCM[11],header=FALSE)
PAL044DCM1 = read.csv(filenamesDCM[12],header=FALSE)
PAL045DCM1 = read.csv(filenamesDCM[13],header=FALSE)
PAL048DCM1 = read.csv(filenamesDCM[14],header=FALSE)
PAL050DCM1 = read.csv(filenamesDCM[15],header=FALSE)
PAL052DCM1 = read.csv(filenamesDCM[16],header=FALSE)
#PAL052DCM2 = read.csv(filenamesDCM[17],header=FALSE) Broad peak @ 15.8 looked less like rest of data. Use D1.
PAL130DCM1 = read.csv(filenamesDCM[18],header=FALSE)
PAL131DCM1 = read.csv(filenamesDCM[19],header=FALSE)
PAL133DCM1 = read.csv(filenamesDCM[20],header=FALSE)
PAL134DCM1 = read.csv(filenamesDCM[21],header=FALSE)
PAL137DCM1 = read.csv(filenamesDCM[22],header=FALSE)
PAL227DCM1 = read.csv(filenamesDCM[23],header=FALSE)
PAL247DCM1 = read.csv(filenamesDCM[24],header=FALSE)
PAL248DCM1 = read.csv(filenamesDCM[25],header=FALSE)
PAL250DCM1 = read.csv(filenamesDCM[26],header=FALSE)
#PAL250D2 = read.csv(filenamesDCM[27],header=FALSE)  Graph 250D2 looked the same as 052D2. Use D1.
PAL252DCM1 = read.csv(filenamesDCM[28],header=FALSE)
PAL270DCM1 = read.csv(filenamesDCM[29],header=FALSE)
PAL299DCM1 = read.csv(filenamesDCM[30],header=FALSE)
PAL300DCM1 = read.csv(filenamesDCM[31],header=FALSE)
PAL301DCM1 = read.csv(filenamesDCM[32],header=FALSE)
PAL302DCM1 = read.csv(filenamesDCM[33],header=FALSE)
PAL306DCM1 = read.csv(filenamesDCM[34],header=FALSE)
PAL307DCM1 = read.csv(filenamesDCM[35],header=FALSE)
PAL332DCM1 = read.csv(filenamesDCM[36],header=FALSE)
PAL333DCM1 = read.csv(filenamesDCM[37],header=FALSE)
PAL334DCM1 = read.csv(filenamesDCM[38],header=FALSE)
PAL340DCM1 = read.csv(filenamesDCM[39],header=FALSE)
PAL355DCM1 = read.csv(filenamesDCM[40],header=FALSE)
PAL356DCM1 = read.csv(filenamesDCM[41],header=FALSE)
PAL359DCM1 = read.csv(filenamesDCM[42],header=FALSE)
PAL362DCM1 = read.csv(filenamesDCM[43],header=FALSE)
PAL374DCM1 = read.csv(filenamesDCM[44],header=FALSE)
PAL375DCM1 = read.csv(filenamesDCM[45],header=FALSE)
PAL378DCM1 = read.csv(filenamesDCM[46],header=FALSE)
PAL379DCM1 = read.csv(filenamesDCM[47],header=FALSE)
PAL382DCM1 = read.csv(filenamesDCM[48],header=FALSE)


PAL001HEX1 = read.csv(filenamesHEX[1],header=FALSE)
PAL003HEX1 = read.csv(filenamesHEX[2],header=FALSE)
PAL007HEX1 = read.csv(filenamesHEX[3],header=FALSE)
PAL014HEX1 = read.csv(filenamesHEX[4],header=FALSE)
PAL015HEX1 = read.csv(filenamesHEX[5],header=FALSE)
PAL017HEX1 = read.csv(filenamesHEX[6],header=FALSE)
PAL018HEX1 = read.csv(filenamesHEX[7],header=FALSE)
PAL019HEX1 = read.csv(filenamesHEX[8],header=FALSE)
PAL029HEX1 = read.csv(filenamesHEX[9],header=FALSE)
PAL042HEX1 = read.csv(filenamesHEX[10],header=FALSE)
PAL043HEX1 = read.csv(filenamesHEX[11],header=FALSE)
PAL044HEX1 = read.csv(filenamesHEX[12],header=FALSE)
PAL046HEX1 = read.csv(filenamesHEX[13],header=FALSE)
PAL130HEX1 = read.csv(filenamesHEX[14],header=FALSE)
PAL131HEX1 = read.csv(filenamesHEX[15],header=FALSE)
PAL133HEX1 = read.csv(filenamesHEX[16],header=FALSE)
PAL250HEX1 = read.csv(filenamesHEX[17],header=FALSE) 
PAL250HEX2 = read.csv(filenamesHEX[18],header=FALSE)
PAL252HEX1 = read.csv(filenamesHEX[19],header=FALSE)
PAL270HEX1 = read.csv(filenamesHEX[20],header=FALSE)
PAL299HEX1 = read.csv(filenamesHEX[21],header=FALSE)
PAL332HEX1 = read.csv(filenamesHEX[22],header=FALSE)
PAL333HEX1 = read.csv(filenamesHEX[23],header=FALSE)
PAL334HEX1 = read.csv(filenamesHEX[24],header=FALSE)
PAL340HEX1 = read.csv(filenamesHEX[25],header=FALSE)
PAL355HEX1 = read.csv(filenamesHEX[26],header=FALSE)
PAL356HEX1 = read.csv(filenamesHEX[27],header=FALSE)  
PAL359HEX1 = read.csv(filenamesHEX[28],header=FALSE)
PAL362HEX1 = read.csv(filenamesHEX[29],header=FALSE)
PAL374HEX1 = read.csv(filenamesHEX[30],header=FALSE)
PAL375HEX1 = read.csv(filenamesHEX[31],header=FALSE)
PAL378HEX1 = read.csv(filenamesHEX[32],header=FALSE)
PAL379HEX1 = read.csv(filenamesHEX[33],header=FALSE)
PAL382HEX1 = read.csv(filenamesHEX[34],header=FALSE)
```
plot(PAL250HEX1, type="l")
plot(PAL250HEX2, type="l")
plot(PAL042HEX1, type="l")
plot(PAL019HEX1, type="l")


**2. Use trap function to generate trapezoidal area**

```{r}
DELTA = 0.00033333333333 #Time increment by which intensity is measured (in minutes)

trap <- function(intens, delta) { 
  intens1 <- rep(intens)
  intens1 = intens1[-1]
  intens = intens[1:length(intens)-1]
  trapArea = (intens + intens1)*delta/2
  return(c(as.numeric(trapArea), 0))
}

norm <- function(trapArea){
  tot = sum(trapArea)
  return(trapArea/tot)
}
```

**3. Generate dataframe with normalized trapezoid areas for all time points as well as the sample number, separating solvent ("greasiness"), and clade.**

```{r}
#Process as dataframe - CHANGE TO AS.NUMERIC
#truncate
TRUNC_BEGIN = 15000
TRUNC_END = 62004
#We omit the first and last 15000 observations (5 minutes) because there is little observed activity during those time intervals.


dataframe = rbind(
  #S. glaucum clade F
  c(003,"DCM","F", norm(trap(as.numeric(PAL003DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(006,"DCM","F", norm(trap(as.numeric(PAL006DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(007,"DCM","F", norm(trap(as.numeric(PAL007DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(014,"DCM","F", norm(trap(as.numeric(PAL014DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(015,"DCM","F", norm(trap(as.numeric(PAL015DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(017,"DCM","F", norm(trap(as.numeric(PAL017DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(018,"DCM","F", norm(trap(as.numeric(PAL018DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(043,"DCM","F", norm(trap(as.numeric(PAL043DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(044,"DCM","F", norm(trap(as.numeric(PAL044DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(048,"DCM","F", norm(trap(as.numeric(PAL048DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(050,"DCM","F", norm(trap(as.numeric(PAL050DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(130,"DCM","F", norm(trap(as.numeric(PAL130DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(131,"DCM","F", norm(trap(as.numeric(PAL131DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(133,"DCM","F", norm(trap(as.numeric(PAL133DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(134,"DCM","F", norm(trap(as.numeric(PAL134DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(248,"DCM","F", norm(trap(as.numeric(PAL248DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(270,"DCM","F", norm(trap(as.numeric(PAL270DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(302,"DCM","F", norm(trap(as.numeric(PAL302DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(333,"DCM","F", norm(trap(as.numeric(PAL333DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(334,"DCM","F", norm(trap(as.numeric(PAL334DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(374,"DCM","F", norm(trap(as.numeric(PAL374DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(378,"DCM","F", norm(trap(as.numeric(PAL378DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(382,"DCM","F", norm(trap(as.numeric(PAL382DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(227,"DCM","F", norm(trap(as.numeric(PAL227DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  
  #S. glaucum clade D
  c(029,"DCM","D", norm(trap(as.numeric(PAL029DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(247,"DCM","D", norm(trap(as.numeric(PAL247DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(252,"DCM","D", norm(trap(as.numeric(PAL252DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(299,"DCM","D", norm(trap(as.numeric(PAL299DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(300,"DCM","D", norm(trap(as.numeric(PAL300DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(306,"DCM","D", norm(trap(as.numeric(PAL306DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(332,"DCM","D", norm(trap(as.numeric(PAL332DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(340,"DCM","D", norm(trap(as.numeric(PAL340DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(355,"DCM","D", norm(trap(as.numeric(PAL355DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(359,"DCM","D", norm(trap(as.numeric(PAL359DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  
  #Trocheliophorum
  c(019,"DCM","T", norm(trap(as.numeric(PAL019DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(042,"DCM","T", norm(trap(as.numeric(PAL042DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(045,"DCM","T", norm(trap(as.numeric(PAL045DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(052,"DCM","T", norm(trap(as.numeric(PAL052DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(137,"DCM","T", norm(trap(as.numeric(PAL137DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(250,"DCM","T", norm(trap(as.numeric(PAL250DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(301,"DCM","T", norm(trap(as.numeric(PAL301DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(307,"DCM","T", norm(trap(as.numeric(PAL307DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(356,"DCM","T", norm(trap(as.numeric(PAL356DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(362,"DCM","T", norm(trap(as.numeric(PAL362DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(375,"DCM","T", norm(trap(as.numeric(PAL375DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(379,"DCM","T", norm(trap(as.numeric(PAL379DCM1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA)))
)

dataframeHEX = rbind(
  c(001, "HEX", "F", norm(trap(as.numeric(PAL001HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(003, "HEX", "F", norm(trap(as.numeric(PAL003HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(007, "HEX", "F", norm(trap(as.numeric(PAL007HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(014, "HEX", "F", norm(trap(as.numeric(PAL014HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(015, "HEX", "F", norm(trap(as.numeric(PAL015HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(017, "HEX", "F", norm(trap(as.numeric(PAL017HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(018, "HEX", "F", norm(trap(as.numeric(PAL018HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(019, "HEX", "T", norm(trap(as.numeric(PAL019HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(029, "HEX", "D", norm(trap(as.numeric(PAL029HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(042, "HEX", "T", norm(trap(as.numeric(PAL042HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(043, "HEX", "F", norm(trap(as.numeric(PAL043HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(044, "HEX", "F", norm(trap(as.numeric(PAL044HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(046, "HEX", "D", norm(trap(as.numeric(PAL046HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(130, "HEX", "F", norm(trap(as.numeric(PAL130HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(131, "HEX", "F", norm(trap(as.numeric(PAL131HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(133, "HEX", "F", norm(trap(as.numeric(PAL133HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(250, "HEX", "T", norm(trap(as.numeric(PAL250HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(250, "HEX", "T", norm(trap(as.numeric(PAL250HEX2[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(252, "HEX", "D", norm(trap(as.numeric(PAL252HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(270, "HEX", "F", norm(trap(as.numeric(PAL270HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(299, "HEX", "D", norm(trap(as.numeric(PAL299HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(332, "HEX", "D", norm(trap(as.numeric(PAL332HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(333, "HEX", "F", norm(trap(as.numeric(PAL333HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(334, "HEX", "F", norm(trap(as.numeric(PAL334HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(340, "HEX", "D", norm(trap(as.numeric(PAL340HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(355, "HEX", "D", norm(trap(as.numeric(PAL355HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(356, "HEX", "T", norm(trap(as.numeric(PAL356HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(359, "HEX", "D", norm(trap(as.numeric(PAL359HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(362, "HEX", "T", norm(trap(as.numeric(PAL362HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(374, "HEX", "F", norm(trap(as.numeric(PAL374HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(375, "HEX", "T", norm(trap(as.numeric(PAL375HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(378, "HEX", "F", norm(trap(as.numeric(PAL378HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(379, "HEX", "T", norm(trap(as.numeric(PAL379HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA))),
  c(382, "HEX", "F", norm(trap(as.numeric(PAL382HEX1[TRUNC_BEGIN:TRUNC_END, 2]), DELTA)))
)
#generate column name vector for the dataframe 
names <- function(){
  nameVec = c(1:47005)
  nameVec = as.character(nameVec)
  
  for(i in 1:47005){
    nameVec[i] = paste("t", nameVec[i], sep="")
  }
  
  nameVec[1:5]
  nameVec = c("Sample", "Greasiness", "Clade", nameVec)
  return(nameVec)
}
colnames(dataframeHEX) <- names()
```

Snapshot of dataframe:

```{r}

install.packages("stargazer", repos='http://cran.us.r-project.org')
library(stargazer)
stargazer(dataframeHEX[1:5,1:5])
```


**3.Create a bin function to partition the data by summing across equal time intervals.**

```{r}

binner <- function(df, binWidth, delta) {
  rowz = c()
  for(j in 1:nrow(df)) {
    col = c()
    row_normed = as.numeric(df[j,-(1:3)])
    for(i in seq(4, ncol(df)-binWidth, binWidth)){
      end = i + binWidth - 1
      col = c(col, sum(as.numeric(df[j,i:end])))
    }
    rowz = rbind(rowz, col)
  }
  return(rowz)
}


binned_matrix_1100 = binner(dataframe, 1100, DELTA)
binned_matrix_2000 = binner(dataframe, 2000, DELTA)
binned_matrix_3000 = binner(dataframe, 3000, DELTA)


binned_matrixHEX_1100 = binner(dataframeHEX, 1100, DELTA)
binned_matrixHEX_2000 = binner(dataframeHEX, 2000, DELTA)
binned_matrixHEX_3000 = binner(dataframeHEX, 3000, DELTA)


```
\
**4. PCA - 22 Second Bin Width (1100 time points)**

```{r}
#DCM:
trapAreas.centered = scale(binned_matrix_1100, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

F = 1:24
D = 25:34
T = 35:46

plot(PC[,1],PC[,2],col="white",main = "PCA - 22 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey") 
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_1100 = cor(PC,binned_matrix_1100)
install.packages("corrplot", repos='http://cran.us.r-project.org')
library(corrplot)
corrplot(t(correlation_1100), method="color")

#HEX:
trapAreas.centered_HEX = scale(binned_matrixHEX_1100, center = TRUE, scale = FALSE)
pca.result_HEX <- prcomp(trapAreas.centered_HEX)
str(pca.result_HEX)
PC_HEX = pca.result_HEX$x

F = as.numeric(which(dataframeHEX[,3]=="F"))
D = as.numeric(which(dataframeHEX[,3]=="D"))
T = as.numeric(which(dataframeHEX[,3]=="T"))

plot(PC_HEX[,1],PC_HEX[,2],col="white",main = "PCA - 22 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC_HEX[F,1],PC_HEX[F,2],col="blue")
points(PC_HEX[D,1],PC_HEX[D,2],col="deeppink")
points(PC_HEX[T,1],PC_HEX[T,2],col="grey") 
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_1100 = cor(PC_HEX,binned_matrix_1100)
install.packages("corrplot", repos='http://cran.us.r-project.org')
library(corrplot)
corrplot(t(correlation_1100), method="color")
```

**5. PCA - 40 Second Bin Width (2000 time points)**

```{r}
#DCM:
trapAreas.centered = scale(binned_matrix_2000, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "PCA - 40 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_2000 = cor(PC,binned_matrix_2000)
library(corrplot)
corrplot(t(correlation_2000), method="color")
par(mfrow=c(1,1))

#HEX:
trapAreas.centered_HEX = scale(binned_matrixHEX_2000, center = TRUE, scale = FALSE)
pca.result_HEX <- prcomp(trapAreas.centered_HEX)
str(pca.result_HEX)
PC_HEX = pca.result_HEX$x

F = as.numeric(which(dataframeHEX[,3]=="F"))
D = as.numeric(which(dataframeHEX[,3]=="D"))
T = as.numeric(which(dataframeHEX[,3]=="T"))

plot(PC_HEX[,1],PC_HEX[,2],col="white",main = "PCA - 40 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC_HEX[F,1],PC_HEX[F,2],col="blue")
points(PC_HEX[D,1],PC_HEX[D,2],col="deeppink")
points(PC_HEX[T,1],PC_HEX[T,2],col="grey") 
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_2000 = cor(PC_HEX,binned_matrix_2000)
install.packages("corrplot", repos='http://cran.us.r-project.org')
library(corrplot)
corrplot(t(correlation_2000), method="color")
```


**6. PCA - 60 Second Bin Width (3000 time points)**

```{r}
#DCM:
trapAreas.centered = scale(binned_matrix_3000, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "PCA - 60 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_3000 = cor(PC,binned_matrix_3000)
require(corrplot)
corrplot(t(correlation_3000), method="color")
par(mfrow=c(1,1))

#HEX:
trapAreas.centered_HEX = scale(binned_matrixHEX_3000, center = TRUE, scale = FALSE)
pca.result_HEX <- prcomp(trapAreas.centered_HEX)
str(pca.result_HEX)
PC_HEX = pca.result_HEX$x

F = as.numeric(which(dataframeHEX[,3]=="F"))
D = as.numeric(which(dataframeHEX[,3]=="D"))
T = as.numeric(which(dataframeHEX[,3]=="T"))

plot(PC_HEX[,1],PC_HEX[,2],col="white",main = "PCA - 60 Second Bin Width",xlab="PC1",ylab="PC2")
points(PC_HEX[F,1],PC_HEX[F,2],col="blue")
points(PC_HEX[D,1],PC_HEX[D,2],col="deeppink")
points(PC_HEX[T,1],PC_HEX[T,2],col="grey") 
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')

correlation_3000 = cor(PC_HEX,binned_matrix_3000)
install.packages("corrplot", repos='http://cran.us.r-project.org')
library(corrplot)
corrplot(t(correlation_3000), method="color")
```

**7. LDA - 22 Second Bin Width (1100 time points)**

```{r}
#DCM:
library(MASS)
lda_info = lda(as.factor(dataframe[,3])~binned_matrix_1100)
lda_info$scaling #Linear discriminant coefficient matrix
lda_info_p = predict(lda_info,as.data.frame(binned_matrix_1100))
lda_info_pclass = predict(lda_info)$class
par(mar=c(5,4,4,4))
v = as.numeric(lda_info_pclass)
v[which(v==1)] =  "deeppink"   #D
v[which(v==2)] =  12           #F
v[which(v==3)] =  "grey"       #Trochi

plot(lda_info_p$x[,1],pch=16, col = v,main = "LDA - 22 Second Bin Width",xlab="df1",ylab="df2") #Plot the linear discriminants
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink",12,"grey"), pch=16,bty='o')

clade.manova = manova(binned_matrix_1100~as.factor(dataframe[,3]))
clade.wilks = summary(clade.manova,test="Wilks");clade.wilks

#HEX:
library(MASS)
lda_info_HEX = lda(as.factor(dataframeHEX[,3])~binned_matrix_1100)
lda_info$scaling #Linear discriminant coefficient matrix
lda_info_p = predict(lda_info,as.data.frame(binned_matrix_1100))
lda_info_pclass = predict(lda_info)$class
par(mar=c(5,4,4,4))
v = as.numeric(lda_info_pclass)
v[which(v==1)] =  "deeppink"   #D
v[which(v==2)] =  12           #F
v[which(v==3)] =  "grey"       #Trochi

plot(lda_info_p$x[,1],pch=16, col = v,main = "LDA - 22 Second Bin Width",xlab="df1",ylab="df2") #Plot the linear discriminants
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink",12,"grey"), pch=16,bty='o')

clade.manova = manova(binned_matrix_1100~as.factor(dataframe[,3]))
clade.wilks = summary(clade.manova,test="Wilks");clade.wilks

```

The Wilk's Lambda statistic corresponds to a p-value of ~.09, suggesting that the clades account for a large (but only marginally significant) proportion of the variance in binned area.

**8. LDA - 40 Second Bin Width (2000 time points)**

```{r}
lda_info = lda(as.factor(dataframe[,3])~binned_matrix_2000)
lda_info$scaling  #Linear discriminant coefficient matrix
lda_info_p = predict(lda_info,as.data.frame(binned_matrix_2000))
lda_info_pclass = predict(lda_info)$class
par(mar=c(5,4,4,4))
v = as.numeric(lda_info_pclass)
v[which(v==1)] =  "deeppink"   #D
v[which(v==2)] =  12           #F
v[which(v==3)] =  "grey"       #Trochi

plot(lda_info_p$x[,1],pch=16, col = v,main = "LDA - 40 Second Bin Width",xlab="df1",ylab="df2") #Plot the linear discriminants
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink",12,"grey"), pch=16,bty='o')

clade.manova = manova(binned_matrix_2000~as.factor(dataframe[,3]))
clade.wilks = summary(clade.manova,test="Wilks");clade.wilks
```

The Wilk's Lambda statistic corresponds to a p-value of ~0.0008, suggesting that the clades account for a large, significant proportion of the variance in binned area.

**9. LDA — 60 Second Bin Width (3000 time points)**

```{r}
lda_info = lda(as.factor(dataframe[,3])~binned_matrix_3000)
lda_info$scaling  #Linear discriminant coefficient matrix
lda_info_p = predict(lda_info,as.data.frame(binned_matrix_3000))
lda_info_pclass = predict(lda_info)$class
par(mar=c(5,4,4,4))
v = as.numeric(lda_info_pclass)
v[which(v==1)] =  "deeppink"   #D
v[which(v==2)] =  12           #F
v[which(v==3)] =  "grey"       #Trochi

plot(lda_info_p$x[,1],pch=16, col = v,main = "LDA - 60 Second Bin Width",xlab="df1",ylab="df2") #Plot the linear discriminants
legend("topright",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink",12,"grey"), pch=16,bty='o')

clade.manova = manova(binned_matrix_3000~as.factor(dataframe[,3]))
clade.wilks = summary(clade.manova,test="Wilks");clade.wilks
```

The Wilk's Lambda statistic corresponds to a p-value of ~0, suggesting that the clades account for a large, significant proportion of the variance in binned area.
\


\
**APPENDIX**

Experimentation with different bin sizes:

```{r}
binned_matrix_1100 = binner(dataframe[,15000:62004],1100, DELTA)
binned_matrix_1300 = binner(dataframe[,15000:62004],1300, DELTA)
binned_matrix_1500 = binner(dataframe[,15000:62004],1500, DELTA)
binned_matrix_1600 = binner(dataframe[,15000:62004],1600, DELTA)
binned_matrix_1800 = binner(dataframe[,15000:62004],1800, DELTA)
binned_matrix_2000 = binner(dataframe[,15000:62004],2000, DELTA)
```


```{r}
trapAreas.centered = scale(binned_matrix_1100, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "22 Second Bin Width (1100 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. glaucum clade D"),col=c("deeppink","blue","grey"), pch=1,bty='o')


trapAreas.centered = scale(binned_matrix_1300, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "26 Second Bin Width (1300 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')


trapAreas.centered = scale(binned_matrix_1500, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "30 Second Bin Width (1500 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')


trapAreas.centered = scale(binned_matrix_1600, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "32 Second Bin Width (1600 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')


trapAreas.centered = scale(binned_matrix_1800, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "36 Second Bin Width (1800 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')


trapAreas.centered = scale(binned_matrix_2000, center = TRUE, scale = FALSE)
pca.result <- prcomp(trapAreas.centered)
str(pca.result)
PC = pca.result$x

plot(PC[,1],PC[,2],col="white",main = "40 Second Bin Width (2000 time points)",xlab="PC1",ylab="PC2")
points(PC[F,1],PC[F,2],col="blue")
points(PC[D,1],PC[D,2],col="deeppink")
points(PC[T,1],PC[T,2],col="grey")
legend("topleft",legend=c("S. glaucum clade D","S. glaucum clade F","S. trocheliophorum"),col=c("deeppink","blue","grey"), pch=1,bty='o')
```


barplot(binned_matrix_2000[26,],col="skyblue",main="Sample 29",ylab = "Area",xlab="Bin")

<<<<<<< HEAD
=======
setwd("C:/Users/maloneem/Documents/CoralProject/BinnedAreas")
for(i in 1:46){
  png(filename=paste("Binned_Areas",as.character(i),".png", sep=""), height=250, width=650, bg="white")
  barplot(binned_matrix_2000[i,],col="skyblue",ylab = "Area",xlab="Bin")
  dev.off()
}

>>>>>>> 4b7611986e070f2cd3f168d2b830438157c3aa8e
sum(binned_matrix_2000[25,])
